// src/slices/authSlice.ts

import { createSlice, PayloadAction } from '@reduxjs/toolkit';

// Define the shape of the authentication state
interface AuthState {
  isAuthenticated: boolean; // Indicates if the user is authenticated
  token: string | null; // Holds the authentication token
  username: any; // Holds the username (can be any type)
}

// Initial state for the authentication slice
const initialState: AuthState = {
  isAuthenticated: false, // Initially not authenticated
  token: null, // No token initially
  username: undefined, // Username starts as undefined
};

// Create the authSlice using createSlice from Redux Toolkit
const authSlice = createSlice({
  name: 'auth', // Slice name
  initialState, // Initial state defined above
  reducers: {
    // Reducer function for handling login action
    login: (state, action: PayloadAction<string>) => {
      state.isAuthenticated = true; // Set isAuthenticated to true upon login
      state.token = action.payload; // Set the token from the payload
    },
    // Reducer function for handling logout action
    logout: (state) => {
      state.isAuthenticated = false; // Set isAuthenticated to false upon logout
      state.token = null; // Clear the token
    },
  },
});

// Export the action creators generated by createSlice
export const { login, logout } = authSlice.actions;

// Export the reducer function generated by createSlice
export default authSlice.reducer;
